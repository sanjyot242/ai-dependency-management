version: '3.8'

services:
  # Node Express API Service
  node-service:
    build:
      context: ./node-service
      dockerfile: Dockerfile
    container_name: node-service
    ports:
      - '3001:3001'
    depends_on:
      - db
      - rabbitmq
    environment:
      - NODE_ENV=production
      - MONGO_URL=mongodb://db:27017/dependencydb
      - PYTHON_SERVICE_URL=http://python-service:3002
      - FRONTEND_URL=http://localhost:8080
      - GITHUB_CLIENT_ID=${GITHUB_CLIENT_ID}
      - GITHUB_CLIENT_SECRET=${GITHUB_CLIENT_SECRET}
      - GITHUB_REDIRECT_URI=${GITHUB_REDIRECT_URI}
      - API_BASE_URL=${API_BASE_URL}
      - RABBITMQ_URL=amqp://user:password@rabbitmq:5672
      - JWT_SECRET=${JWT_SECRET:-your_default_secret_key}
      - GITHUB_WEBHOOK_SECRET=your-webhook-secret
    networks:
      - app-network
    restart: unless-stopped

  # Worker Process for Background Jobs

  # Python Service for Any ML/Analysis Needs
  python-service:
    build:
      context: ./python-service
      dockerfile: Dockerfile
    container_name: python-service
    ports:
      - '3002:3002'
    environment:
      - PYTHONUNBUFFERED=1
    networks:
      - app-network
    restart: unless-stopped

  # React Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    ports:
      - '8080:80'
    depends_on:
      - node-service
    env_file:
      - ./frontend/.env
    networks:
      - app-network
    restart: unless-stopped

  # MongoDB Database
  db:
    image: mongo:6
    container_name: db
    ports:
      - '27017:27017'
    volumes:
      - mongodb_data:/data/db
    networks:
      - app-network
    restart: unless-stopped

  # RabbitMQ Message Queue
  rabbitmq:
    image: rabbitmq:3-management
    container_name: dependency-scanner-rabbitmq
    restart: unless-stopped
    ports:
      - '5672:5672' # AMQP protocol port
      - '15672:15672' # Management UI port
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - app-network

volumes:
  mongodb_data:
  rabbitmq_data:

networks:
  app-network:
    driver: bridge
